name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js for Backend
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Test Backend
      working-directory: ./backend
      run: npm test

    - name: Setup Node.js for Frontend
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Frontend Dependencies
      working-directory: ./client
      run: npm install

    - name: Build Frontend
      working-directory: ./client
      run: npm run build

    - name: Build Backend Docker Image
      run: |
        docker build -t buraksefil17/project2-restaurant-backend:latest ./backend
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
        docker push buraksefil17/project2-restaurant-backend:latest

    - name: Build Frontend Docker Image
      run: |
        docker build -t buraksefil17/restaurant-client:latest ./client
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
        docker push buraksefil17/restaurant-client:latest

  deployment:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        kubectl apply -f backend-deployment.yml
        kubectl apply -f client-deployment.yml
        kubectl apply -f db-deployment.yml
        kubectl apply -f backend-service.yml
        kubectl apply -f client-service.yml
        kubectl apply -f db-service.yml
        kubectl apply -f parsistent-volume.yml
        kubectl apply -f pvc.yml
  
  deploy_to_eks:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update kubeconfig
      run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eksburak
              